pipeline {
    agent { label 'docker' } // agent
    options {
        timestamps()
    } // options
    stages{
        stage('test project') {
            steps {
                script {
                    withSonarQubeEnv(credentialsId: 'sonarqube-wtf') {
                        sh 'env'
                        sh '.build/scanner.sh'
                    } // withSonarQubeEnv
                } // script
            } // steps
        } // stage - test project
        stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: true
                } // timeout
            } // steps
        } // stage
    } // stages
    post {
        always {
            cleanWs deleteDirs: true, notFailBuild: true
        } // always
    } // post
} // pipeline