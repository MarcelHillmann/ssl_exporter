pipeline {
    agent any
    options {
        timestamps()
    } // options
    stages{
        stage('test project') {
            agent { label 'python' } // agent
            steps {
                script {
                    withEnv(["path+sonar=${tool(name: 'SonarQube Scanner', type: 'hudson.plugins.sonar.SonarRunnerInstallation')}/bin"
                            ,"path+python=${tool(name: '3', type: 'jenkins.plugins.shiningpanda.tools.PythonInstallation')}"]) {
                        withSonarQubeEnv(credentialsId: 'sonarqube-wtf') {
                            sh 'env'
                            sh 'bash -x .build/scanner.sh'
                        } // withSonarQubeEnv
                    } // withEnv
                } // script
            } // steps
        } // stage - test project
        stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: true
                } // timeout
            } // steps
        } // stage
    } // stages
    post {
        always {
            cleanWs deleteDirs: true, notFailBuild: true
        } // always
    } // post
} // pipeline